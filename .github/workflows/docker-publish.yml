name: Docker

on:
  workflow_dispatch:
    inputs:
      tagged_version:
        description: ZT ref
        required: true
      amd64:
        type: boolean
        default: true
        description: Compile for amd64
      armv7:
        type: boolean
        default: true
        description: Compile for armv7
      arm64v8:
        type: boolean
        default: true
        description: Compile for arm64v8

defaults:
  run:
    shell: bash

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: 'zerotier/ZeroTierOne'
          ref: ${{ github.event.inputs.tagged_version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image - amd64
        if: ${{ github.event.inputs.amd64 == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: pkg/synology/dsm7-docker
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          build-args: |
            ZTO_COMMIT=${{ github.event.inputs.tagged_version }}
            ZTO_VER=${{ github.event.inputs.tagged_version }}
          provenance: false
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tagged_version }}-amd64"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image - armv7
        if: ${{ github.event.inputs.armv7 == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: pkg/synology/dsm7-docker
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/arm/v7
          build-args: |
            ZTO_COMMIT=${{ github.event.inputs.tagged_version }}
            ZTO_VER=${{ github.event.inputs.tagged_version }}
          provenance: false
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tagged_version }}-armv7"
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image - arm64v8
        if: ${{ github.event.inputs.arm64v8 == 'true' }}
        uses: docker/build-push-action@v6
        with:
          context: pkg/synology/dsm7-docker
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/arm64/v8
          build-args: |
            ZTO_COMMIT=${{ github.event.inputs.tagged_version }}
            ZTO_VER=${{ github.event.inputs.tagged_version }}
          provenance: false
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tagged_version }}-arm64v8"
          cache-from: type=gha
          cache-to: type=gha,mode=max
